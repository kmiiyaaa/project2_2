{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_workspace\\\\project2_2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { type } from \"@testing-library/user-event/dist/type\";\nimport \"./App.css\";\nimport Header from \"./component/Header\";\nimport TodoEditor from \"./component/TodoEditor\";\nimport TodoList from \"./component/TodoList\";\nimport { useRef, useState, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction reducer(state, action) {\n  //action type에 따른 동작 switch문\n  return state;\n}\nfunction App() {\n  _s();\n  const mockTodo = [{\n    id: 0,\n    isDone: false,\n    content: \"리액트 공부하기\",\n    creatDate: new Date().getTime()\n  }, {\n    id: 1,\n    isDone: false,\n    content: \"빨래 널기\",\n    creatDate: new Date().getTime()\n  }, {\n    id: 2,\n    isDone: false,\n    content: \"노래 연습하기\",\n    creatDate: new Date().getTime()\n  }];\n\n  //const [todo, setTodo] = useState(mockTodo);\n  const [todo, dispatch] = useReducer(reducer, mockTodo); // 위에 mokTodo 없으면 빈배열 넣기\n\n  const idRef = useRef(3); //초깃값이 3인 ref객체 생성하여 idRef에 저장\n\n  function onCreate(content) {\n    //추가 버튼이 클릭되면 실행될 이벤트 핸들러\n    dispatch({\n      type: \"CREATE\",\n      data: {\n        id: idRef.current,\n        //idRef가 현재 저장하고 있는 값 불러옴\n        content,\n        isDone: false,\n        creatDate: new Date().getTime()\n      }\n    });\n    idRef.current += 1; // newItem -> 할일 객체를 생성 후 idRef값을 증가\n  }\n  function onUpdate(targetId) {}\n  function onDelete(targetId) {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todo: todo,\n      onUpdate: onUpdate,\n      onDelete: onDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4y8XCPdCPAjTHEhpuZJtt9guigM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["type","Header","TodoEditor","TodoList","useRef","useState","useReducer","jsxDEV","_jsxDEV","reducer","state","action","App","_s","mockTodo","id","isDone","content","creatDate","Date","getTime","todo","dispatch","idRef","onCreate","data","current","onUpdate","targetId","onDelete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React_workspace/project2_2/src/App.js"],"sourcesContent":["import { type } from \"@testing-library/user-event/dist/type\";\nimport \"./App.css\";\nimport Header from \"./component/Header\";\nimport TodoEditor from \"./component/TodoEditor\";\nimport TodoList from \"./component/TodoList\";\nimport { useRef, useState, useReducer } from \"react\";\n\nfunction reducer(state, action) {\n  //action type에 따른 동작 switch문\n  return state;\n}\n\nfunction App() {\n  const mockTodo = [\n    {\n      id: 0,\n      isDone: false,\n      content: \"리액트 공부하기\",\n      creatDate: new Date().getTime(),\n    },\n    {\n      id: 1,\n      isDone: false,\n      content: \"빨래 널기\",\n      creatDate: new Date().getTime(),\n    },\n    {\n      id: 2,\n      isDone: false,\n      content: \"노래 연습하기\",\n      creatDate: new Date().getTime(),\n    },\n  ];\n\n  //const [todo, setTodo] = useState(mockTodo);\n  const [todo, dispatch] = useReducer(reducer, mockTodo); // 위에 mokTodo 없으면 빈배열 넣기\n\n  const idRef = useRef(3); //초깃값이 3인 ref객체 생성하여 idRef에 저장\n\n  function onCreate(content) {\n    //추가 버튼이 클릭되면 실행될 이벤트 핸들러\n    dispatch({\n      type: \"CREATE\",\n      data: {\n        id: idRef.current, //idRef가 현재 저장하고 있는 값 불러옴\n        content,\n        isDone: false,\n        creatDate: new Date().getTime(),\n      },\n    });\n\n    idRef.current += 1; // newItem -> 할일 객체를 생성 후 idRef값을 증가\n  }\n\n  function onUpdate(targetId) {}\n\n  function onDelete(targetId) {}\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <TodoEditor onCreate={onCreate} />\n      <TodoList todo={todo} onUpdate={onUpdate} onDelete={onDelete} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,uCAAuC;AAC5D,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC9B;EACA,OAAOD,KAAK;AACd;AAEA,SAASE,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAG,CACf;IACEC,EAAE,EAAE,CAAC;IACLC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE,UAAU;IACnBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC;EAChC,CAAC,EACD;IACEL,EAAE,EAAE,CAAC;IACLC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE,OAAO;IAChBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC;EAChC,CAAC,EACD;IACEL,EAAE,EAAE,CAAC;IACLC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE,SAAS;IAClBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC;EAChC,CAAC,CACF;;EAED;EACA,MAAM,CAACC,IAAI,EAAEC,QAAQ,CAAC,GAAGhB,UAAU,CAACG,OAAO,EAAEK,QAAQ,CAAC,CAAC,CAAC;;EAExD,MAAMS,KAAK,GAAGnB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEzB,SAASoB,QAAQA,CAACP,OAAO,EAAE;IACzB;IACAK,QAAQ,CAAC;MACPtB,IAAI,EAAE,QAAQ;MACdyB,IAAI,EAAE;QACJV,EAAE,EAAEQ,KAAK,CAACG,OAAO;QAAE;QACnBT,OAAO;QACPD,MAAM,EAAE,KAAK;QACbE,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC;MAChC;IACF,CAAC,CAAC;IAEFG,KAAK,CAACG,OAAO,IAAI,CAAC,CAAC,CAAC;EACtB;EAEA,SAASC,QAAQA,CAACC,QAAQ,EAAE,CAAC;EAE7B,SAASC,QAAQA,CAACD,QAAQ,EAAE,CAAC;EAE7B,oBACEpB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvB,OAAA,CAACP,MAAM;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV3B,OAAA,CAACN,UAAU;MAACsB,QAAQ,EAAEA;IAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClC3B,OAAA,CAACL,QAAQ;MAACkB,IAAI,EAAEA,IAAK;MAACM,QAAQ,EAAEA,QAAS;MAACE,QAAQ,EAAEA;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEV;AAACtB,EAAA,CArDQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAuDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
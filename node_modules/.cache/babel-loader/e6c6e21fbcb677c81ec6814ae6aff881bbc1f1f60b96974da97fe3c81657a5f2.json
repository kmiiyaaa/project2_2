{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_workspace\\\\project2_2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Header from './component/Header';\nimport TodoEditor from './component/TodoEditor';\nimport TodoList from './component/TodoList';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const mockTodo = [{\n    id: 0,\n    isDone: false,\n    content: \"리액트 공부하기\",\n    creatDate: new Date().getTime()\n  }, {\n    id: 1,\n    isDone: false,\n    content: \"빨래 널기\",\n    creatDate: new Date().getTime()\n  }, {\n    id: 2,\n    isDone: false,\n    content: \"노래 연습하기\",\n    creatDate: new Date().getTime()\n  }];\n  const [todo, setTodo] = useState(mockTodo);\n  const idRef = useRef(3); //초깃값이 3인 ref객체 생성하여 idRef에 저장\n\n  function onCreate(content) {\n    //추가 버튼이 클릭되면 실행될 이벤트 핸들러\n    const newItem = {\n      id: idRef.current,\n      //idRef가 현재 저장하고 있는 값을 불러옴\n      content,\n      //content:\"밥먹기\"\n      isDone: false,\n      creatDate: new Date().getTime()\n    };\n    setTodo([newItem, ...todo]); //[...todo, newItem]->[{id0},{id1},{id2},{id3}]\n    //newItem->할일 객체를 생성한 후 idRef값을 1증가\n    idRef.current += 1;\n  }\n  function onUpdate(targetId) {\n    setTodo(todo.map(it => {\n      //할일 아이템을 반복하다가 들어온 targetId와 현재 읽고 있는 할일 아이템의\n      //id와 일치하면 참\n\n      if (it.id === targetId) {\n        //console.log(...it);\n        return {\n          ...it,\n          isDone: !it.isDone\n        };\n      } else {\n        return it;\n      }\n    }));\n  }\n  function onDelete(targetId) {\n    setTodo(todo.filter(it => it.id !== targetId));\n    //삭제를 클릭한 id 아이템을 제외한 나머지 할일 리스트를 todo에 저장\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todo: todo,\n      onUpdate: onUpdate,\n      onDelete: onDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kqWr39xoPK0QuE6WnPE5Cus1RrY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","TodoEditor","TodoList","useRef","useState","jsxDEV","_jsxDEV","App","_s","mockTodo","id","isDone","content","creatDate","Date","getTime","todo","setTodo","idRef","onCreate","newItem","current","onUpdate","targetId","map","it","onDelete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React_workspace/project2_2/src/App.js"],"sourcesContent":["import './App.css';\nimport Header from './component/Header';\nimport TodoEditor from './component/TodoEditor';\nimport TodoList from './component/TodoList';\nimport { useRef, useState } from 'react';\n\nfunction App() {\n  \n  const mockTodo = [\n    {\n      id: 0,\n      isDone: false,\n      content : \"리액트 공부하기\",\n      creatDate : new Date().getTime(),\n    },\n    {\n      id: 1,\n      isDone: false,\n      content : \"빨래 널기\",\n      creatDate : new Date().getTime(),\n    },\n    {\n      id: 2,\n      isDone: false,\n      content : \"노래 연습하기\",\n      creatDate : new Date().getTime(),\n    }\n  ];\n\n  const [todo, setTodo] = useState(mockTodo);\n\n  const idRef = useRef(3); //초깃값이 3인 ref객체 생성하여 idRef에 저장\n\n  function onCreate(content) { //추가 버튼이 클릭되면 실행될 이벤트 핸들러\n    const newItem = {\n      id: idRef.current, //idRef가 현재 저장하고 있는 값을 불러옴\n      content,//content:\"밥먹기\"\n      isDone : false,\n      creatDate : new Date().getTime()\n    };    \n    setTodo([newItem, ...todo]);//[...todo, newItem]->[{id0},{id1},{id2},{id3}]\n    //newItem->할일 객체를 생성한 후 idRef값을 1증가\n    idRef.current += 1;\n  }\n\n  function onUpdate(targetId) {\n    setTodo( \n    todo.map((it)=>{\n      //할일 아이템을 반복하다가 들어온 targetId와 현재 읽고 있는 할일 아이템의\n      //id와 일치하면 참\n      \n      if (it.id === targetId) { \n        //console.log(...it);\n        return {\n         ...it, isDone: !it.isDone \n        };\n      } else {\n        return it;\n      }\n    })\n  );\n  }\n\n  function onDelete(targetId) {\n    setTodo(todo.filter((it)=>it.id !== targetId));\n    //삭제를 클릭한 id 아이템을 제외한 나머지 할일 리스트를 todo에 저장\n  }\n\n  \n  return (\n    <div className=\"App\">\n      <Header />\n      <TodoEditor onCreate={onCreate} />\n      <TodoList todo={todo} onUpdate={onUpdate} onDelete={onDelete} />     \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}